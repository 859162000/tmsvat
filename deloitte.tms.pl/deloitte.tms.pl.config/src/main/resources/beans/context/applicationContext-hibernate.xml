<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<bean id="sessionFactory"
		class="${hibernate.sessionFactory}">
		<property name="dataSource" ref="dataSource" />
		<property name="entityInterceptor" ref="ling2.unByteCodeProxyInterceptor" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<!-- <prop key="hibernate.connection.provider_class">
					${hibernate.connection.provider_class}
				</prop>
				<prop key="hibernate.cache.provider_class">
					${hibernate.cache.provider_class}
				</prop>
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache}
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					${hibernate.cache.use_second_level_cache}
				</prop>
				<prop key="hibernate.cache.region.factory_class">
    				${hibernate.cache.region.factory_class}
				</prop> -->
				<prop key="hibernate.hbm2ddl.auto">
					${hibernate.hbm2ddl.auto}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
				</prop>
				 <prop key="hibernate.query.factory_class">
					${hibernate.query.factory_class}
				</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>		
			</list>
		</property>
		<property name="mappingLocations">
			<list>
				<!--<value>classpath*:/model/oracle/**/*.hbm.xml</value>
				<value>classpath*:/jbpm.task.hbm.xml</value>
				<value>classpath*:/jbpm.repository.hbm.xml</value>
				<value>classpath*:/config/jbpm.history.hbm.xml</value>
				<value>classpath*:/jbpm.execution.hbm.xml</value>-->
			</list>
		</property>
		<property name="packagesToScan">
            <list>
               	<value>com.deloitte.tms.**.model.**</value>
               	<value>com.deloitte.**.model.**</value>
               	<value>com.deloitte.riskintegrator.**.model.**</value>
            </list>
         </property>
	</bean>
		
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="transactionManager"
		class="${hibernate.transactionManager}">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- <tx:annotation-driven proxy-target-class="true" transaction-manager="ling2.jdbcTransactionManager" /> -->
	
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.tms.pl..*.service..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.tms.pl..*.dao..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.tms.pl..*.context..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte..*.service..*.*(..))"/>		
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte..*.persister..*.*(..))"/>
		
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte..*.dao..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte..*.context..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* velox.service..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.tms.pl..*.datainit..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.riskintegrator..*.service..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.riskintegrator..*.dao..*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.deloitte.riskintegrator..*.datainit..*.*(..))"/>
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="recycle*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="publish*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="audit*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="dispatch*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="import*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="gen*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="invalid*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="valid*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="clean*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="save*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="insert*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="change*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="create*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="delete*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="update*"  propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="remove*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="batch*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="submint*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="submit*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="suspend*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="auto*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="add*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="clone*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="send*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="exec*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="exe*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="syn*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="authorize*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="authorizate*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="synchronize*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="generate*" propagation="REQUIRED" rollback-for="BusinessException" />
		<tx:method name="calculate*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="agency*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="grante*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="register*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="deploy*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="set*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="process*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<!-- workflow start -->
		<tx:method name="start*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="forward*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="withdrawTask*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="claim*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="release*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="suspend*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="resume*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="complete*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="batch*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="rollbackTask*" propagation="REQUIRED" rollback-for="BusinessException"  />		
		<tx:method name="deploy*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<tx:method name="native*" propagation="REQUIRED" rollback-for="BusinessException"  />
		<!-- workflow end -->
		<tx:method name="init*" read-only="true" />
		<tx:method name="current*" read-only="true" />
		<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>