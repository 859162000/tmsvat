package com.deloitte.tms.vat.purchinvoice.controller;
// Generated by bo.wang with ling2.autoproject

import java.io.IOException;
import java.io.InputStream;
import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.FileUtils;
import com.deloitte.tms.pl.core.commons.utils.PageUtils;
import com.deloitte.tms.pl.security.utils.LittleUtils;
//import com.deloitte.tms.pl.core.commons.springmvc.controller.BaseController;
import com.deloitte.tms.vat.controller.BaseController;
import com.deloitte.tms.vat.core.common.JsonDateValueProcessor;
import com.deloitte.tms.vat.purchinvoice.service.TmsDrvatInvoiceTrxHService;


/**
 * Home object for domain model class TmsDrvatInvoiceTrxH.
 * @see com.deloitte.tms.vat.purchinvoice.model
 * @author Hibernate Tools
 */
@Controller
@RequestMapping("tmsDrvatInvoiceTrxL")
public class TmsDrvatInTrxLController extends BaseController{
	
	@Resource
	TmsDrvatInvoiceTrxHService tmsDrvatInvoiceTrxHService;
	
	
	//@RequestMapping(value = "/jxfpdjMgt.do", method = RequestMethod.GET)
/*	public String initJxfpdj()throws Exception{
		return "vat/tmsdrvatinvoicetrxh/jxfpdj";
	}*/
	
	
	@RequestMapping(value = "/initDrvatInTrxL.do")
	public String initDrvatInTrxL()throws Exception{
		return "vat/tmsdrvatinvoicetrxh/tmsDrvatInTrxL";
	}

	
	
	
	@RequestMapping("/exportTemplate.do")
	public void exportTemplate(HttpServletResponse response){
		InputStream result=null;
		try {			
			result=FileUtils.getFileInputStreamByClassLocation(TmsDrvatInTrxLController.class, "DrvatInTrxTemplate.xls");
//			response.setContentType(fileType); // 设置返回的文件类型
			//response.reset();
			response.setContentType("application/x-msdownload");
			response.addHeader("Content-Disposition", "attachment; filename=\""
					+ FileUtils.toUtf8String("进项发票导入模板.xls") + "\"");
			Long length = FileUtils.download4System(result, response.getOutputStream()); // 得到向客户端输出二进制数据的对象
			response.setContentLength(length.intValue());
		} catch (IOException ex) {
			ex.printStackTrace();
		}finally{
			FileUtils.safeClose(result);
		}
	}
	
	
	@RequestMapping("/importExcel.do")
	public void importExcel(@RequestParam MultipartFile[] myfiles,HttpServletResponse response)  {
		
		StringBuffer sb = new StringBuffer();
		
		try{
		
		for(MultipartFile myfile : myfiles){
			if(myfile.isEmpty()){
				try {
//					this.returnOk(response, "请选择文件后上传");
				} catch (Exception e) {
				}
			}else{
				String originalFilename = myfile.getOriginalFilename();
				System.out.println("file orgional name: " + originalFilename);
				System.out.println("now file name: " + myfile.getName());
				System.out.println("file size: " + myfile.getSize());
				System.out.println("file type: " + myfile.getContentType());
				System.out.println("========================================");
				try {
					
					sb = tmsDrvatInvoiceTrxHService.importExcel(myfile.getInputStream());
//					FileUtils.copyInputStreamToFile(myfile.getInputStream(), new File(realPath, originalFilename));
				} catch (Exception e) {
					System.out.println("file[" + originalFilename + "]upload fail, stack as below:");
					e.printStackTrace();
					System.out.println(e.getMessage());
					try {
//						this.returnOk(response, "文件[" + originalFilename + "]上传失败:"+e.getMessage());
					} catch (Exception e1) {
						System.out.println(e1.getMessage());
					}
				}
			}
		}
		
		String mes=sb.toString();
		StringBuffer xx = new StringBuffer();
		
		System.out.println("mes is:"+mes+";");
		if(LittleUtils.strEmpty(mes)  || AssertHelper.empty(mes)){
			System.out.println("mes is:"+mes+";");
			System.out.println("ok import mes is:"+mes+";");
			xx.append("导入成功");
		}else{
			//xx.append("导入成功, 其中 ").append(mes).append(" 行的数据与数据库中数据重复, 未做导入.");
			System.out.println("no import mes is:"+mes+";");
			xx.append("第 ").append(mes).append(" 等行的数据与数据库中数据重复, 请处理好后再导入.");
		}
		
		this.returnOk(response, xx.toString());
		return;
		
		
/*		try{
		response.sendRedirect("initDrvatInTrxL.do");
		}catch(Exception x){
			x.printStackTrace();
		}*/
		
	}catch(Exception exce){
		
		
		
		try{
		exce.printStackTrace();
		
		System.out.println(exce.getMessage());
		
		String mes=sb.toString();
		StringBuffer xx = new StringBuffer();
		
		if(LittleUtils.strEmpty(mes)){
			xx.append("导入异常");
		}else{
			xx.append("导入成功, 其中 ").append(mes).append(" 行的数据与数据库中数据重复.");
		}		
		
		this.returnOk(response, xx.toString());
		}catch(Exception xxf){
			System.out.println("in catch;"+xxf.getMessage());
		}
		
		
	}
		
	}
	
	
	@RequestMapping(value = "/searchTrxL.do")
	public void searchTrxL(@RequestParam Map<String,Object> parameter, HttpServletResponse response) throws Exception {
		
		Integer pageNumber=PageUtils.getPageNumber(parameter);
		Integer pageSize=PageUtils.getPageSize(parameter);	
		
		if(parameter!=null){
			parameter.remove("pageNumber");
			parameter.remove("pageSize");
		}
		
		DaoPage daoPage=tmsDrvatInvoiceTrxHService.findTmsDrvatInvoiceTrxLByParams2(parameter,pageNumber,pageSize);
		
		JsonConfig jsonConfig = new JsonConfig();
		jsonConfig.registerJsonValueProcessor(Date.class,
				new JsonDateValueProcessor("yyyy-MM-dd"));
		JSONArray jsonArray = JSONArray.fromObject(daoPage.getResult(), jsonConfig);
		
		JSONObject result = new JSONObject();
		result.put("total", daoPage.getRecordCount());
		result.put("rows", jsonArray.toString());
		retJson(response, result);
		
		
		//return daoPage;
	}
	
	
	@RequestMapping(value = "/delTrxL.do")
	public void delTrxL(String ids, HttpServletResponse response) {
		
		try{
		
		if(LittleUtils.strEmpty(ids)){
			return;
		}
		
		this.tmsDrvatInvoiceTrxHService.removeTrxL(ids);
	
		this.returnOk(response, "删除成功");
		return;
	}catch(Exception e){
		e.printStackTrace();
		this.returnFail(response, "删除异常");	
	}
		
}
	
}

