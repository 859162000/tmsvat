package com.deloitte.tms.vat.salesinvoice.controller;
// Generated by bo.wang with ling2.autoproject

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.aspectj.weaver.ast.Var;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;




import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.vat.base.enums.CrvatReverseReqResEnums;
import com.deloitte.tms.vat.controller.BaseController;
import com.deloitte.tms.vat.core.common.JsonDateValueProcessor;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.PageUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.context.utils.ContextUtils;
import com.deloitte.tms.vat.model.ReverseReqForm;
import com.deloitte.tms.vat.salesinvoice.model.TmsCrvatInvReverseReq;
import com.deloitte.tms.vat.salesinvoice.model.TmsCrvatInvReverseReqInParam;
import com.deloitte.tms.vat.salesinvoice.service.TmsCrvatInvReverseReqService;
/**
 * Home object for domain model class TmsCrvatInvReverseReq.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Controller
//@RequestMapping("tmsCrvatInvReverseReq")
public class TmsCrvatInvReverseReqController extends BaseController{
	@Resource
	TmsCrvatInvReverseReqService tmsCrvatInvReverseReqService;
	
	@RequestMapping(value = "tmsCrvatInvReverseReq/initTmsCrvatInvReverseReq", method = RequestMethod.GET)
	public String initTmsCrvatInvReverseReq()throws Exception{
		return "vat/tmscrvatinvreversereq/tmsCrvatInvReverseReq";
	}
	
	//@ResponseBody
	@RequestMapping(value = "tmsCrvatInvReverseReq/loadTmsCrvatInvReverseReqPage", method = RequestMethod.POST)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public void loadTmsCrvatInvReverseReqPage(@RequestParam Map<String,Object> parameter,HttpServletResponse response) throws Exception {
		DaoPage daoPage=tmsCrvatInvReverseReqService.findTmsCrvatInvReverseReqByParams(parameter,PageUtils.getPageNumber(parameter),PageUtils.getPageSize(parameter));
		JsonConfig jsonConfig = new JsonConfig();
		jsonConfig.registerJsonValueProcessor(Date.class,
				new JsonDateValueProcessor("yyyy-MM-dd"));
		JSONArray jsonArray = JSONArray.fromObject(daoPage.getResult(), jsonConfig);
		JSONObject result = new JSONObject();
		result.put("total", daoPage.getRecordCount());
		result.put("rows", jsonArray.toString());
		retJson(response, result);	
		
		
	}
	@ResponseBody
	@RequestMapping(value = "tmsCrvatInvReverseReq/saveTmsCrvatInvReverseReq", method = RequestMethod.POST)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public void saveTmsCrvatInvReverseReq(@ModelAttribute("reverseReqForm") ReverseReqForm reverseReqForm, HttpServletResponse response) throws Exception {
		
		JSONObject result = new JSONObject();
		CrvatReverseReqResEnums CrvatReverseReqRes = tmsCrvatInvReverseReqService.checkExistVoice(reverseReqForm.getInvoiceCode(),reverseReqForm.getInvoiceNumber(),reverseReqForm.getInvoiceReverseHeaderNo());
		
		if (CrvatReverseReqRes.equals(CrvatReverseReqResEnums.succeeded)){
			TmsCrvatInvReverseReq entity=new TmsCrvatInvReverseReq();
			entity.setInventoryInvoiceId(reverseReqForm.getInventoryInvoiceId());
			entity.setInvoiceCode(reverseReqForm.getInvoiceCode());
			entity.setInvoiceNumber(reverseReqForm.getInvoiceNumber());
			entity.setInvoiceReverseReqReason(reverseReqForm.getInvoiceReverseReqReason());
			entity.setInvoiceReverseHeaderNo(Long.parseLong(reverseReqForm.getInvoiceReverseHeaderNo())); 
			entity.setRequestBy(ContextUtils.getCurrentUserName());
			java.util.Date nowdate = new java.util.Date();
			entity.setInvoiceReverseReqDate(nowdate);
			entity.setRequestDate(nowdate);
			entity.setIsRepeatInvoice(reverseReqForm.getIsRepeatInvoice());
			//entity.setBizOrgCode("123");//MARK:could not insert null into BIZ_ORG_CODE
			tmsCrvatInvReverseReqService.save(entity);
			//MARK:invoice reverse do not need update
		
			//reset the transaction status
			String invoiceCode =reverseReqForm.getInvoiceCode();
			String invoiceNumber = reverseReqForm.getInvoiceNumber();
			tmsCrvatInvReverseReqService.resetCrvatTaxPoolStatus(invoiceCode, invoiceNumber);
		}
		result.put("msg", CrvatReverseReqRes.getValue());
		retJson(response, result);
		
		
	}	
	
	
	@ResponseBody
	@RequestMapping(value = "tmsCrvatInvReverseReq/removeTmsCrvatInvReverseReq", method = RequestMethod.POST)

	public void removeTmsCrvatInvReverseReqPage(@RequestParam Map<String,String> param) throws Exception {
		
		System.out.println(param);
		tmsCrvatInvReverseReqService.removeCrvatInvReverseReqById(param.get("id").toString());
		
		
	}
}

