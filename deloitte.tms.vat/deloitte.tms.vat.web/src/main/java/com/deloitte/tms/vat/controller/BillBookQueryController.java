package com.deloitte.tms.vat.controller;
// Generated by bo.wang with ling2.autoproject

import java.io.Serializable;
import java.util.Collection;
import java.util.Map;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.commons.utils.PageUtils;
import com.deloitte.tms.pl.core.commons.springmvc.controller.BaseController;
import com.deloitte.tms.vat.bill.pm.model.BillBook;
import com.deloitte.tms.vat.bill.pm.model.BillBookInParam;
import com.deloitte.tms.vat.bill.pm.service.BillBookService;
/**
 * Home object for domain model class BillBook.
 * @see com.deloitte.tms.vat.bill.pm.model
 * @author Hibernate Tools
 */
@Controller
@RequestMapping("billBookQuery")
public class BillBookQueryController extends BaseController{
	
	@Resource
	BillBookService billBookService;
	
	@ResponseBody
	@RequestMapping(value = "/loadBillBookQueryPage", method = RequestMethod.POST)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public DaoPage loadBillBookQueryPage(@RequestParam Map<String,Object> parameter) throws Exception {
		//DaoPage daoPage=billBookService.findBillBookByParams(parameter,PageUtils.getPageIndex(parameter),PageUtils.getPageSize(parameter));
		DaoPage daoPage=null;
		return daoPage;
	}
	
	@RequestMapping(value = "/billBookQueryInit", method = RequestMethod.GET)
	public String clientManageInit()throws Exception{
		return "vat/billBookQuery/billBookQueryInit";
	}
	
	@ResponseBody
	@RequestMapping(value = "/loadModifyBillBookQuery", method = RequestMethod.GET)
	public BillBookInParam loadModifyBillBookQuery(@RequestParam Map<String, Object> map) throws Exception {
		Object id=map.get("id");
		AssertHelper.notEmpty_assert(id,"编辑的主键不能为空");
		/*
		BillBook entity=(BillBook)billBookService.get(BillBook.class,id.toString());
		BillBookInParam inParam=billBookService.convertBillBookToInParam(entity);*/
		BillBookInParam inParam = null;
		return inParam;
	}
}

