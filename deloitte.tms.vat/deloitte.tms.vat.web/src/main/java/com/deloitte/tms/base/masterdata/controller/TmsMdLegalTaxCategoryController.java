package com.deloitte.tms.base.masterdata.controller;
// Generated by bo.wang with ling2.autoproject

import java.io.Serializable;
import java.util.Collection;
import java.util.Map;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.deloitte.tms.pl.core.commons.support.DaoPage;

import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.commons.utils.PageUtils;
import com.deloitte.tms.pl.core.commons.springmvc.controller.BaseController;
import com.deloitte.tms.base.masterdata.model.TmsMdLegalTaxCategory;
import com.deloitte.tms.base.masterdata.model.TmsMdLegalTaxCategoryInParam;
import com.deloitte.tms.base.masterdata.model.TmsMdLegalTaxCategory;
import com.deloitte.tms.base.masterdata.model.TmsMdLegalTaxCategoryInParam;
import com.deloitte.tms.base.masterdata.service.TmsMdLegalTaxCategoryService;
/**
 * Home object for domain model class TmsMdLegalTaxCategory.
 * @see com.deloitte.tms.base.masterdata.model
 * @author Hibernate Tools
 */
@Controller
@RequestMapping("tmsMdLegalTaxCategory")
public class TmsMdLegalTaxCategoryController extends BaseController{
	@Resource
	TmsMdLegalTaxCategoryService tmsMdLegalTaxCategoryService;
	
	@ResponseBody
	@RequestMapping(value = "/loadTmsMdLegalTaxCategoryPage", method = RequestMethod.GET)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public DaoPage loadTmsMdLegalTaxCategoryPage(@RequestParam Map<String,Object> parameter) throws Exception {
		DaoPage daoPage=tmsMdLegalTaxCategoryService.findTmsMdLegalTaxCategoryByParams(parameter,PageUtils.getPageIndex(parameter),PageUtils.getPageSize(parameter));
		return daoPage;
	}
	@ResponseBody
	@RequestMapping(value = "/saveTmsMdLegalTaxCategory", method = RequestMethod.POST)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public void saveTmsMdLegalTaxCategory(TmsMdLegalTaxCategoryInParam inParam) throws Exception {
		TmsMdLegalTaxCategory entity=tmsMdLegalTaxCategoryService.convertTmsMdLegalTaxCategoryInParamToEntity(inParam);
		if(entity.getId()==null){
			tmsMdLegalTaxCategoryService.save(entity);
		}
		else{
			tmsMdLegalTaxCategoryService.update(entity);
		}
		inParam.setId(entity.getId());
	}	
	@ResponseBody
	@RequestMapping(value = "/removeTmsMdLegalTaxCategorys", method = RequestMethod.POST)
	//@RoleAnnotation(roles=RoleDef.ECOMMERCE_ADMIN)
	public void removeTmsMdLegalTaxCategorys(@RequestParam String tmsMdLegalTaxCategoryKeys) {
		AssertHelper.notEmpty_assert(tmsMdLegalTaxCategoryKeys,"需要删除的用户不能为空");
		String[] tmsMdLegalTaxCategoryIds=tmsMdLegalTaxCategoryKeys.split(",");
		//for(String tmsMdLegalTaxCategoryId:tmsMdLegalTaxCategoryIds){
			
		//}
	}

	
	
	
}

