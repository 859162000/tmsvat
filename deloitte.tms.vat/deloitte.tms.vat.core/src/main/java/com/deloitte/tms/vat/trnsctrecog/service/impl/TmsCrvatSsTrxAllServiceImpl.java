package com.deloitte.tms.vat.trnsctrecog.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.trnsctrecog.model.TmsCrvatSsTrxAll;
import com.deloitte.tms.vat.trnsctrecog.model.TmsCrvatSsTrxAllInParam;
import com.deloitte.tms.vat.trnsctrecog.dao.TmsCrvatSsTrxAllDao;
import com.deloitte.tms.vat.trnsctrecog.service.TmsCrvatSsTrxAllService;
/**
 * Home object for domain model class TmsCrvatSsTrxAll.
 * @see com.deloitte.tms.vat.trnsctrecog.model
 * @author Hibernate Tools
 */
@Component(TmsCrvatSsTrxAllService.BEAN_ID)
public class TmsCrvatSsTrxAllServiceImpl extends BaseService implements TmsCrvatSsTrxAllService{
	@Resource
	TmsCrvatSsTrxAllDao tmsCrvatSsTrxAllDao;

	@Override
	public IDao getDao() {
		return tmsCrvatSsTrxAllDao;
	}

	@Override
	public DaoPage findTmsCrvatSsTrxAllByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= tmsCrvatSsTrxAllDao.findTmsCrvatSsTrxAllByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertTmsCrvatSsTrxAllToInParam((List<TmsCrvatSsTrxAll>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<TmsCrvatSsTrxAllInParam> findTmsCrvatSsTrxAllByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<TmsCrvatSsTrxAll> temp= tmsCrvatSsTrxAllDao.findTmsCrvatSsTrxAllByParams(params);
		return convertTmsCrvatSsTrxAllToInParam(temp);
	}
	@Override
	public void saveTmsCrvatSsTrxAllDataListsMap(Map dataListsMap) {
		Collection<TmsCrvatSsTrxAllInParam> deleteList = BatchUtils.to(TmsCrvatSsTrxAllInParam.class).getDeleteEntities(dataListsMap);
		Collection<TmsCrvatSsTrxAllInParam> insertList =  BatchUtils.to(TmsCrvatSsTrxAllInParam.class).getInsertEntities(dataListsMap);
		Collection<TmsCrvatSsTrxAllInParam> updateList =  BatchUtils.to(TmsCrvatSsTrxAllInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(TmsCrvatSsTrxAllInParam inParam: updateList){
				TmsCrvatSsTrxAll entity=convertTmsCrvatSsTrxAllInParamToEntity(inParam);
				tmsCrvatSsTrxAllDao.update(entity);
			}		
//			tmsCrvatSsTrxAllDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(TmsCrvatSsTrxAllInParam inParam: insertList){
				TmsCrvatSsTrxAll entity=convertTmsCrvatSsTrxAllInParamToEntity(inParam);
				tmsCrvatSsTrxAllDao.save(entity);
				inParam.setId(entity.getId());
			}
//			tmsCrvatSsTrxAllDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(TmsCrvatSsTrxAllInParam inParam:deleteList){
				TmsCrvatSsTrxAll entity=new TmsCrvatSsTrxAll();
				entity.setId(inParam.getId());
				tmsCrvatSsTrxAllDao.remove(entity);
			}
//			tmsCrvatSsTrxAllDao.removeAll(deleteList);
		}
		
	}
	private List<TmsCrvatSsTrxAllInParam> convertTmsCrvatSsTrxAllToInParam(List<TmsCrvatSsTrxAll> models){
		List<TmsCrvatSsTrxAllInParam> result=new ArrayList<TmsCrvatSsTrxAllInParam>();
		for(TmsCrvatSsTrxAll initiation:models){
			TmsCrvatSsTrxAllInParam inparam=convertTmsCrvatSsTrxAllToInParam(initiation);
			if(initiation.getCustomer()!=null)
			{
			inparam.setCustomerCode(initiation.getCustomer().getCustomerNumber());
			inparam.setCutomerName(initiation.getCustomer().getCustomerName());
			inparam.setCustomerType(initiation.getCustomer().getCustomerType());
			}
			if(initiation.getBaseOrg()!=null)
			{
			inparam.setOrgCode(initiation.getBaseOrg().getOrgCode());
			inparam.setOrgName(initiation.getBaseOrg().getOrgName());
			}
//			inparam.setBaseOrg(initiation.getBaseOrg());
//			inparam.setCustomer(initiation.getCustomer());
			result.add(inparam);
		}
		return result;
	}
	public TmsCrvatSsTrxAllInParam convertTmsCrvatSsTrxAllToInParam(TmsCrvatSsTrxAll model){
		TmsCrvatSsTrxAllInParam inparam=new TmsCrvatSsTrxAllInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	public TmsCrvatSsTrxAll convertTmsCrvatSsTrxAllInParamToEntity(TmsCrvatSsTrxAllInParam inParam){
		TmsCrvatSsTrxAll entity=new TmsCrvatSsTrxAll();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

