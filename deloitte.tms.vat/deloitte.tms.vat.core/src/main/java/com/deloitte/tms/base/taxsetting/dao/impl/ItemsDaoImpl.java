package com.deloitte.tms.base.taxsetting.dao.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.deloitte.tms.base.taxsetting.model.Items;
import com.deloitte.tms.base.taxsetting.dao.ItemsDao;
import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.dao.impl.BaseDao;
/**
 * Home object for domain model class Items.
 * @see com.deloitte.tms.base.taxsetting.model
 * @author Hibernate Tools
 */
@Component(ItemsDao.BEAN_ID)
public class ItemsDaoImpl extends BaseDao<Items> implements ItemsDao{
	public DaoPage findItemsByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildItemsQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<Items> findItemsByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildItemsQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildItemsQuery(StringBuffer query,Map values,Map params) {
		query.append(" from Items where 1=1");//
		Object value=params.get("status");
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);
		}
		if(AssertHelper.isOrNotEmpty_assert(params.get("categoryId"))){
			query.append(" and categoryId=:categoryId");
			values.put("categoryId", params.get("categoryId"));
		}
		if(AssertHelper.isOrNotEmpty_assert(params.get("itemName"))){
			query.append(" and id=:itemName");
			values.put("itemName", params.get("itemName"));
		}
		if(AssertHelper.isOrNotEmpty_assert(params.get("itemTaxRules"))){
			query.append(" and itemTaxRules=:itemTaxRules");
			values.put("itemTaxRules", params.get("itemTaxRules"));
		}
	}
}

