package com.deloitte.tms.vat.purchinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.purchinvoice.model.TmsDrvatInvoiceOnhand;
import com.deloitte.tms.vat.purchinvoice.model.TmsDrvatInvoiceOnhandInParam;
import com.deloitte.tms.vat.purchinvoice.dao.TmsDrvatInvoiceOnhandDao;
import com.deloitte.tms.vat.purchinvoice.service.TmsDrvatInvoiceOnhandService;
/**
 * Home object for domain model class TmsDrvatInvoiceOnhand.
 * @see com.deloitte.tms.vat.purchinvoice.model
 * @author Hibernate Tools
 */
@Component(TmsDrvatInvoiceOnhandService.BEAN_ID)
public class TmsDrvatInvoiceOnhandServiceImpl extends BaseService implements TmsDrvatInvoiceOnhandService{
	@Resource
	TmsDrvatInvoiceOnhandDao tmsDrvatInvoiceOnhandDao;

	@Override
	public IDao getDao() {
		return tmsDrvatInvoiceOnhandDao;
	}

	@Override
	public DaoPage findTmsDrvatInvoiceOnhandByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= tmsDrvatInvoiceOnhandDao.findTmsDrvatInvoiceOnhandByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertTmsDrvatInvoiceOnhandToInParam((List<TmsDrvatInvoiceOnhand>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<TmsDrvatInvoiceOnhandInParam> findTmsDrvatInvoiceOnhandByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<TmsDrvatInvoiceOnhand> temp= tmsDrvatInvoiceOnhandDao.findTmsDrvatInvoiceOnhandByParams(params);
		return convertTmsDrvatInvoiceOnhandToInParam(temp);
	}
	@Override
	public void saveTmsDrvatInvoiceOnhandDataListsMap(Map dataListsMap) {
		Collection<TmsDrvatInvoiceOnhandInParam> deleteList = BatchUtils.to(TmsDrvatInvoiceOnhandInParam.class).getDeleteEntities(dataListsMap);
		Collection<TmsDrvatInvoiceOnhandInParam> insertList =  BatchUtils.to(TmsDrvatInvoiceOnhandInParam.class).getInsertEntities(dataListsMap);
		Collection<TmsDrvatInvoiceOnhandInParam> updateList =  BatchUtils.to(TmsDrvatInvoiceOnhandInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(TmsDrvatInvoiceOnhandInParam inParam: updateList){
				TmsDrvatInvoiceOnhand entity=convertTmsDrvatInvoiceOnhandInParamToEntity(inParam);
				tmsDrvatInvoiceOnhandDao.update(entity);
			}		
//			tmsDrvatInvoiceOnhandDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(TmsDrvatInvoiceOnhandInParam inParam: insertList){
				TmsDrvatInvoiceOnhand entity=convertTmsDrvatInvoiceOnhandInParamToEntity(inParam);
				tmsDrvatInvoiceOnhandDao.save(entity);
				inParam.setId(entity.getId());
			}
//			tmsDrvatInvoiceOnhandDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(TmsDrvatInvoiceOnhandInParam inParam:deleteList){
				TmsDrvatInvoiceOnhand entity=new TmsDrvatInvoiceOnhand();
				entity.setId(inParam.getId());
				tmsDrvatInvoiceOnhandDao.remove(entity);
			}
//			tmsDrvatInvoiceOnhandDao.removeAll(deleteList);
		}
		
	}
	private List<TmsDrvatInvoiceOnhandInParam> convertTmsDrvatInvoiceOnhandToInParam(List<TmsDrvatInvoiceOnhand> models){
		List<TmsDrvatInvoiceOnhandInParam> result=new ArrayList<TmsDrvatInvoiceOnhandInParam>();
		for(TmsDrvatInvoiceOnhand initiation:models){
			TmsDrvatInvoiceOnhandInParam inparam=convertTmsDrvatInvoiceOnhandToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public TmsDrvatInvoiceOnhandInParam convertTmsDrvatInvoiceOnhandToInParam(TmsDrvatInvoiceOnhand model){
		TmsDrvatInvoiceOnhandInParam inparam=new TmsDrvatInvoiceOnhandInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	public TmsDrvatInvoiceOnhand convertTmsDrvatInvoiceOnhandInParamToEntity(TmsDrvatInvoiceOnhandInParam inParam){
		TmsDrvatInvoiceOnhand entity=new TmsDrvatInvoiceOnhand();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

