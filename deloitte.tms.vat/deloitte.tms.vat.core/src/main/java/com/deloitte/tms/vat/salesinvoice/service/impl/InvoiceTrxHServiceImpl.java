package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxH;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxHInParam;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxH;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxHInParam;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxPool;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxPoolInParam;
import com.deloitte.tms.vat.salesinvoice.dao.InvoiceTrxHDao;
import com.deloitte.tms.vat.salesinvoice.service.InvoiceTrxHService;
/**
 * Home object for domain model class InvoiceTrxH.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(InvoiceTrxHService.BEAN_ID)
public class InvoiceTrxHServiceImpl extends BaseService implements InvoiceTrxHService{
	@Resource
	InvoiceTrxHDao invoiceTrxHDao;

	@Override
	public IDao getDao() {
		return invoiceTrxHDao;
	}

	@Override
	public DaoPage findInvoiceTrxHByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= invoiceTrxHDao.findInvoiceTrxHByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertInvoiceTrxHToInParam((List<InvoiceTrxH>) daoPage.getResult()));
		return daoPage;
	}
	
	private List<InvoiceTrxHInParam> convertInvoiceTrxHToInParam(List<InvoiceTrxH> models){
		List<InvoiceTrxHInParam> result=new ArrayList<InvoiceTrxHInParam>();
		for(InvoiceTrxH initiation:models){
			InvoiceTrxHInParam inparam=convertInvoiceTrxHToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	
	public InvoiceTrxHInParam convertInvoiceTrxHToInParam(InvoiceTrxH model){
		InvoiceTrxHInParam inparam=new InvoiceTrxHInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	
}

