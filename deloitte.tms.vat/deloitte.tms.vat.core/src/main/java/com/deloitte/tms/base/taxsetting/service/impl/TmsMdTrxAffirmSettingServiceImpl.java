package com.deloitte.tms.base.taxsetting.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.base.taxsetting.dao.TmsMdTrxAffirmSettingDao;
import com.deloitte.tms.base.taxsetting.model.TmsMdTrxAffirmSetting;
import com.deloitte.tms.base.taxsetting.model.TmsMdTrxAffirmSettingInParam;
import com.deloitte.tms.base.taxsetting.service.TmsMdTrxAffirmSettingService;
/**
 * Home object for domain model class TmsMdTrxAffirmSetting.
 * @see com.deloitte.tms.base.masterdata.model
 * @author Hibernate Tools
 */
@Component(TmsMdTrxAffirmSettingService.BEAN_ID)
public class TmsMdTrxAffirmSettingServiceImpl extends BaseService implements TmsMdTrxAffirmSettingService{
	@Resource
	TmsMdTrxAffirmSettingDao tmsMdTrxAffirmSettingDao;

	@Override
	public IDao getDao() {
		return tmsMdTrxAffirmSettingDao;
	}

	@Override
	public DaoPage findTmsMdTrxAffirmSettingByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= tmsMdTrxAffirmSettingDao.findTmsMdTrxAffirmSettingByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertTmsMdTrxAffirmSettingToInParam((List<TmsMdTrxAffirmSetting>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<TmsMdTrxAffirmSettingInParam> findTmsMdTrxAffirmSettingByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<TmsMdTrxAffirmSetting> temp= tmsMdTrxAffirmSettingDao.findTmsMdTrxAffirmSettingByParams(params);
		return convertTmsMdTrxAffirmSettingToInParam(temp);
	}
	@Override
	public void saveTmsMdTrxAffirmSettingDataListsMap(Map dataListsMap) {
		Collection<TmsMdTrxAffirmSettingInParam> deleteList = BatchUtils.to(TmsMdTrxAffirmSettingInParam.class).getDeleteEntities(dataListsMap);
		Collection<TmsMdTrxAffirmSettingInParam> insertList =  BatchUtils.to(TmsMdTrxAffirmSettingInParam.class).getInsertEntities(dataListsMap);
		Collection<TmsMdTrxAffirmSettingInParam> updateList =  BatchUtils.to(TmsMdTrxAffirmSettingInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(TmsMdTrxAffirmSettingInParam inParam: updateList){
				TmsMdTrxAffirmSetting entity=convertTmsMdTrxAffirmSettingInParamToEntity(inParam);
				tmsMdTrxAffirmSettingDao.update(entity);
			}		
//			tmsMdTrxAffirmSettingDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(TmsMdTrxAffirmSettingInParam inParam: insertList){
				TmsMdTrxAffirmSetting entity=convertTmsMdTrxAffirmSettingInParamToEntity(inParam);
				tmsMdTrxAffirmSettingDao.save(entity);
				inParam.setId(entity.getId());
			}
//			tmsMdTrxAffirmSettingDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(TmsMdTrxAffirmSettingInParam inParam:deleteList){
				TmsMdTrxAffirmSetting entity=new TmsMdTrxAffirmSetting();
				entity.setId(inParam.getId());
				tmsMdTrxAffirmSettingDao.remove(entity);
			}
//			tmsMdTrxAffirmSettingDao.removeAll(deleteList);
		}
		
	}
	private List<TmsMdTrxAffirmSettingInParam> convertTmsMdTrxAffirmSettingToInParam(List<TmsMdTrxAffirmSetting> models){
		List<TmsMdTrxAffirmSettingInParam> result=new ArrayList<TmsMdTrxAffirmSettingInParam>();
		for(TmsMdTrxAffirmSetting initiation:models){
			TmsMdTrxAffirmSettingInParam inparam=convertTmsMdTrxAffirmSettingToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public TmsMdTrxAffirmSettingInParam convertTmsMdTrxAffirmSettingToInParam(TmsMdTrxAffirmSetting model){
		TmsMdTrxAffirmSettingInParam inparam=new TmsMdTrxAffirmSettingInParam();
		 
		
		if(model.getBaseOrg()!=null && !"".equals(model.getBaseOrg())){
			inparam.setOrgName(model.getBaseOrg().getOrgName());
		}
		if(model.getTmsMdTaxTrxType()!=null && !"".equals(model.getTmsMdTaxTrxType())){
			inparam.setTaxTrxTypeCode(model.getTmsMdTaxTrxType().getTaxTrxTypeCode());
			inparam.setTaxTrxTypeName(model.getTmsMdTaxTrxType().getTaxTrxTypeName());
		}
		if(model.getTaxCategory()!=null && !"".equals(model.getTaxCategory())){
			inparam.setCategoryName(model.getTaxCategory().getCategoryName());
		}
		if(model.getItems()!=null && !"".equals(model.getItems())){
			inparam.setItemName(model.getItems().getItemName());
		}
		if(model.getTmsMdInventoryItems()!=null && !"".equals(model.getTmsMdInventoryItems())){
			inparam.setInventoryItemNumber(model.getTmsMdInventoryItems().getInventoryItemNumber());
			inparam.setInventoryItemDescripton(model.getTmsMdInventoryItems().getInventoryItemDescripton());
		}
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	public TmsMdTrxAffirmSetting convertTmsMdTrxAffirmSettingInParamToEntity(TmsMdTrxAffirmSettingInParam inParam){
		TmsMdTrxAffirmSetting entity=new TmsMdTrxAffirmSetting();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

