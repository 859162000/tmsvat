package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.hibernate.Hibernate;
import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.dao.InvoiceAbolishDao;
import com.deloitte.tms.vat.salesinvoice.dao.InvoiceTrxDao;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceAbolish;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceAbolishInParam;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceAllocD;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceAllocH;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceAllocL;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxD;
import com.deloitte.tms.vat.salesinvoice.model.InvoiceTrxDInParam;
import com.deloitte.tms.vat.salesinvoice.service.InvoiceAbolishService;
import com.deloitte.tms.vat.salesinvoice.service.InvoiceSyncProvider;
/**
 * Home object for domain model class InvoiceAbolish.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(InvoiceAbolishService.BEAN_ID)
public class InvoiceAbolishServiceImpl extends BaseService implements InvoiceAbolishService{
	
	@Resource
	InvoiceAbolishDao invoiceAbolishDao;
	
	@Resource
	InvoiceTrxDao invoiceTrxDao;

	@Resource
	InvoiceSyncProvider invoiceSyncProvider;
	
	@Override
	public IDao getDao() {
		return invoiceAbolishDao;
	}

	@Override
	public DaoPage findInvoiceDByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= invoiceAbolishDao.findInvoiceDByParams(params, pageIndex, pageSize);
		return daoPage;
	}
	
	@Override
	public void auditInvoiceAbolishById(String id) {
		
		InvoiceAbolish abolish = (InvoiceAbolish) invoiceAbolishDao.get(InvoiceAbolish.class, id);
		Date date = getDatabaseServerDate();
		abolish.setApprovalStatus("2"); //1草稿 2已作废
		abolish.setApprovalDate(date);
		this.update(abolish);	
		
		if(abolish.getAbolishType().equals("2")){ //1	已打印发票作废        2	空白发票作废
			InvoiceTrxD invoiceTrxD = invoiceTrxDao.getInvoice(abolish.getInvoiceCode(), abolish.getInvoiceNumber());
			invoiceTrxD.setIsAbolish("1");
			invoiceTrxD.setStatus("5"); //已作废
			this.update(invoiceTrxD);		
		}else{
			Boolean returnFlag = invoiceSyncProvider.exeAbolishInvoiceStatu(abolish.getInvoiceCode(), abolish.getInvoiceNumber());
			if (returnFlag) {
				InvoiceTrxD invoiceTrxD = invoiceTrxDao.getInvoice(abolish.getInvoiceCode(), abolish.getInvoiceNumber());
				invoiceTrxD.setIsAbolish("1");
				invoiceTrxD.setStatus("5");//已作废
				this.update(invoiceTrxD);
			}
		}
	}
	
	public InvoiceAbolish convertInvoiceAbolishInParamToEntity(InvoiceAbolishInParam inParam){
		InvoiceAbolish entity=new InvoiceAbolish();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
	
	public InvoiceTrxDInParam convertInvoiceDToInParam(InvoiceTrxD model){
		InvoiceTrxDInParam inparam=new InvoiceTrxDInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	
	private List<InvoiceTrxDInParam> convertInvoiceDToInParam(List<InvoiceTrxD> models){
		List<InvoiceTrxDInParam> result=new ArrayList<InvoiceTrxDInParam>();
		for(InvoiceTrxD initiation:models){
			InvoiceTrxDInParam inparam=convertInvoiceDToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
}

