package com.deloitte.tms.vat.trnsctrecog.dao.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.dao.impl.BaseDao;
import com.deloitte.tms.vat.trnsctrecog.model.TmsCrvatSsTrxAll;
import com.deloitte.tms.vat.trnsctrecog.dao.TmsCrvatSsTrxAllDao;
/**
 * Home object for domain model class TmsCrvatSsTrxAll.
 * @see com.deloitte.tms.vat.trnsctrecog.model
 * @author Hibernate Tools
 */
@Component(TmsCrvatSsTrxAllDao.BEAN_ID)
public class TmsCrvatSsTrxAllDaoImpl extends BaseDao<TmsCrvatSsTrxAll> implements TmsCrvatSsTrxAllDao{
	public DaoPage findTmsCrvatSsTrxAllByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsCrvatSsTrxAllQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<TmsCrvatSsTrxAll> findTmsCrvatSsTrxAllByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsCrvatSsTrxAllQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildTmsCrvatSsTrxAllQuery(StringBuffer query,Map values,Map params) {
		query.append(" from TmsCrvatSsTrxAll where 1=1 ");
		Object value=params.get("status");
		//根据前端查询条件筛选数据
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);
		}
		 value=params.get("trxBatchNum");
		if((value!=null)&&(!"".equals(value)))
		{//模糊查询
			query.append(" and trxBatchNum like:trxBatchNum");
			values.put("trxBatchNum", "%"+value+"%");
		}
		 value=params.get("trxNumber");//"%"+hql+"%"
		 if((value!=null)&&(!"".equals(value)))
		{//组合查询
			query.append(" and trxNumber=:trxNumber");
			values.put("trxNumber", value);
		}
	}
}

