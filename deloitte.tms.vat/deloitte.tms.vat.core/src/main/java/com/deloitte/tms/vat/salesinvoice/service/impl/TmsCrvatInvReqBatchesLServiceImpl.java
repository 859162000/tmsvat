package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.model.TmsCrvatInvReqBatchesL;
import com.deloitte.tms.vat.salesinvoice.model.TmsCrvatInvReqBatchesLInParam;
import com.deloitte.tms.vat.salesinvoice.dao.TmsCrvatInvReqBatchesLDao;
import com.deloitte.tms.vat.salesinvoice.service.TmsCrvatInvReqBatchesLService;
/**
 * Home object for domain model class TmsCrvatInvReqBatchesL.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(TmsCrvatInvReqBatchesLService.BEAN_ID)
public class TmsCrvatInvReqBatchesLServiceImpl extends BaseService implements TmsCrvatInvReqBatchesLService{
	@Resource
	TmsCrvatInvReqBatchesLDao tmsCrvatInvReqBatchesLDao;

	@Override
	public IDao getDao() {
		return tmsCrvatInvReqBatchesLDao;
	}

	@Override
	public DaoPage findTmsCrvatInvReqBatchesLByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= tmsCrvatInvReqBatchesLDao.findTmsCrvatInvReqBatchesLByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertTmsCrvatInvReqBatchesLToInParam((List<TmsCrvatInvReqBatchesL>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<TmsCrvatInvReqBatchesLInParam> findTmsCrvatInvReqBatchesLByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<TmsCrvatInvReqBatchesL> temp= tmsCrvatInvReqBatchesLDao.findTmsCrvatInvReqBatchesLByParams(params);
		return convertTmsCrvatInvReqBatchesLToInParam(temp);
	}
	@Override
	public void saveTmsCrvatInvReqBatchesLDataListsMap(Map dataListsMap) {
		Collection<TmsCrvatInvReqBatchesLInParam> deleteList = BatchUtils.to(TmsCrvatInvReqBatchesLInParam.class).getDeleteEntities(dataListsMap);
		Collection<TmsCrvatInvReqBatchesLInParam> insertList =  BatchUtils.to(TmsCrvatInvReqBatchesLInParam.class).getInsertEntities(dataListsMap);
		Collection<TmsCrvatInvReqBatchesLInParam> updateList =  BatchUtils.to(TmsCrvatInvReqBatchesLInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(TmsCrvatInvReqBatchesLInParam inParam: updateList){
				TmsCrvatInvReqBatchesL entity=convertTmsCrvatInvReqBatchesLInParamToEntity(inParam);
				tmsCrvatInvReqBatchesLDao.update(entity);
			}		
//			tmsCrvatInvReqBatchesLDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(TmsCrvatInvReqBatchesLInParam inParam: insertList){
				TmsCrvatInvReqBatchesL entity=convertTmsCrvatInvReqBatchesLInParamToEntity(inParam);
				tmsCrvatInvReqBatchesLDao.save(entity);
				inParam.setId(entity.getId());//TmsCrvatInvReqBatchesL
			}
//			tmsCrvatInvReqBatchesLDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(TmsCrvatInvReqBatchesLInParam inParam:deleteList){
				TmsCrvatInvReqBatchesL entity=new TmsCrvatInvReqBatchesL();
				entity.setId(inParam.getId());
				tmsCrvatInvReqBatchesLDao.remove(entity);
			}
//			tmsCrvatInvReqBatchesLDao.removeAll(deleteList);
		}
		
	}
	private List<TmsCrvatInvReqBatchesLInParam> convertTmsCrvatInvReqBatchesLToInParam(List<TmsCrvatInvReqBatchesL> models){
		List<TmsCrvatInvReqBatchesLInParam> result=new ArrayList<TmsCrvatInvReqBatchesLInParam>();
		for(TmsCrvatInvReqBatchesL initiation:models){
			TmsCrvatInvReqBatchesLInParam inparam=convertTmsCrvatInvReqBatchesLToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public TmsCrvatInvReqBatchesLInParam convertTmsCrvatInvReqBatchesLToInParam(TmsCrvatInvReqBatchesL model){
		TmsCrvatInvReqBatchesLInParam inparam=new TmsCrvatInvReqBatchesLInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	public TmsCrvatInvReqBatchesL convertTmsCrvatInvReqBatchesLInParamToEntity(TmsCrvatInvReqBatchesLInParam inParam){
		TmsCrvatInvReqBatchesL entity=new TmsCrvatInvReqBatchesL();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

