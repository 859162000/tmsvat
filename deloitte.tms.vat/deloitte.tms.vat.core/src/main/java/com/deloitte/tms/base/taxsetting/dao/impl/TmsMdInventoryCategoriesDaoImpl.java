package com.deloitte.tms.base.taxsetting.dao.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.dao.impl.BaseDao;
import com.deloitte.tms.base.taxsetting.dao.TmsMdInventoryCategoriesDao;
import com.deloitte.tms.base.taxsetting.model.TmsMdInventoryCategories;
import com.deloitte.tms.base.taxsetting.model.TmsMdInventoryItems;
/**
 * Home object for domain model class TmsMdInventoryCategories.
 * @see com.deloitte.tms.base.masterdata.model
 * @author Hibernate Tools
 */
@Component(TmsMdInventoryCategoriesDao.BEAN_ID)
public class TmsMdInventoryCategoriesDaoImpl extends BaseDao<TmsMdInventoryCategories> implements TmsMdInventoryCategoriesDao{
	public DaoPage findTmsMdInventoryCategoriesByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdInventoryCategoriesQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<TmsMdInventoryCategories> findTmsMdInventoryCategoriesByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdInventoryCategoriesQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildTmsMdInventoryCategoriesQuery(StringBuffer query,Map values,Map params) {
		query.append(" from TmsMdInventoryCategories where 1=1 ");
		Object value=params.get("status");
		Object value2= params.get("orgId");
		Object value3= params.get("inventoryCategoryCode");
		Object value4= params.get("inventoryCategoryName");
		Object value5= params.get("description");
		Object value6= params.get("enabledFlag");
		Object value7= params.get("startDate");
		Object value8= params.get("endDate");
		
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);		
		}
		if(value2 !=null && !"".equals(value2)){		
			query.append(" and orgId like :orgId");	
			values.put("orgId","%"+value2+"%");			
		}
	    if(value3 !=null && !"".equals(value3)){			
			query.append(" and inventoryCategoryCode like :inventoryCategoryCode");		
			values.put("inventoryCategoryCode","%"+value3+"%");		
		}
	    if(value4 !=null && !"".equals(value4)){		
    			query.append(" and inventoryCategoryName like :inventoryCategoryName");		
				values.put("inventoryCategoryName","%"+value4+"%");			
			}
	    if(value5 !=null && !"".equals(value5)){	
			query.append(" and description like :description");	
			values.put("description","%"+value5+"%");	
		}
       if(value6 !=null && !"".equals(value6)){	
			query.append(" and enabledFlag like :enabledFlag");	
			values.put("enabledFlag","%"+value6+"%");		
		}
       if(value7 !=null && !"".equals(value7)){		
    			query.append(" and startDate like :startDate");	
    			values.put("startDate","%"+value7+"%");		
    		}
       if(value8 !=null && !"".equals(value8)){		
			query.append(" and endDate like :endDate");	
			values.put("endDate","%"+value8+"%");	
		}	
	}
	public DaoPage findTmsMdInventoryItemsByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdInventoryItemsQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<TmsMdInventoryItems> findTmsMdInventoryItemsByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdInventoryItemsQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildTmsMdInventoryItemsQuery(StringBuffer query,Map values,Map params) {
		query.append(" from TmsMdInventoryItems where 1=1 ");
		Object value=params.get("tmsMdInventoryCategoriesId");
		if(value!=null&&!"".equals(value))
		{
			value=Long.parseLong(value.toString());
			query.append(" and tmsMdInventoryCategoriesId=:tmsMdInventoryCategoriesId");
			values.put("tmsMdInventoryCategoriesId", value);
		}
		value=params.get("status");
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);
		}
	}


	
	
	
}

