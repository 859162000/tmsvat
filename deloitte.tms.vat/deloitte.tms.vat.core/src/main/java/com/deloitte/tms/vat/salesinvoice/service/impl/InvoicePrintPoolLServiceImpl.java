package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePrintPoolL;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePrintPoolLInParam;
import com.deloitte.tms.vat.salesinvoice.dao.InvoicePrintPoolLDao;
import com.deloitte.tms.vat.salesinvoice.service.InvoicePrintPoolLService;
/**
 * Home object for domain model class InvoicePrintPoolL.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(InvoicePrintPoolLService.BEAN_ID)
public class InvoicePrintPoolLServiceImpl extends BaseService implements InvoicePrintPoolLService{
	@Resource
	InvoicePrintPoolLDao invoicePrintPoolLDao;

	@Override
	public IDao getDao() {
		return invoicePrintPoolLDao;
	}

	@Override
	public DaoPage findInvoicePrintPoolLByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= invoicePrintPoolLDao.findInvoicePrintPoolLByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertInvoicePrintPoolLToInParam((List<InvoicePrintPoolL>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<InvoicePrintPoolLInParam> findInvoicePrintPoolLByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<InvoicePrintPoolL> temp= invoicePrintPoolLDao.findInvoicePrintPoolLByParams(params);
		return convertInvoicePrintPoolLToInParam(temp);
	}
	@Override
	public void saveInvoicePrintPoolLDataListsMap(Map dataListsMap) {
		Collection<InvoicePrintPoolLInParam> deleteList = BatchUtils.to(InvoicePrintPoolLInParam.class).getDeleteEntities(dataListsMap);
		Collection<InvoicePrintPoolLInParam> insertList =  BatchUtils.to(InvoicePrintPoolLInParam.class).getInsertEntities(dataListsMap);
		Collection<InvoicePrintPoolLInParam> updateList =  BatchUtils.to(InvoicePrintPoolLInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(InvoicePrintPoolLInParam inParam: updateList){
				InvoicePrintPoolL entity=convertInvoicePrintPoolLInParamToEntity(inParam);
				invoicePrintPoolLDao.update(entity);
			}		
//			invoicePrintPoolLDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(InvoicePrintPoolLInParam inParam: insertList){
				InvoicePrintPoolL entity=convertInvoicePrintPoolLInParamToEntity(inParam);
				invoicePrintPoolLDao.save(entity);
				inParam.setId(entity.getId());
			}
//			invoicePrintPoolLDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(InvoicePrintPoolLInParam inParam:deleteList){
				InvoicePrintPoolL entity=new InvoicePrintPoolL();
				entity.setId(inParam.getId());
				invoicePrintPoolLDao.remove(entity);
			}
//			invoicePrintPoolLDao.removeAll(deleteList);
		}
		
	}
	private List<InvoicePrintPoolLInParam> convertInvoicePrintPoolLToInParam(List<InvoicePrintPoolL> models){
		List<InvoicePrintPoolLInParam> result=new ArrayList<InvoicePrintPoolLInParam>();
		for(InvoicePrintPoolL initiation:models){
			InvoicePrintPoolLInParam inparam=convertInvoicePrintPoolLToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public InvoicePrintPoolLInParam convertInvoicePrintPoolLToInParam(InvoicePrintPoolL model){
		InvoicePrintPoolLInParam inparam=new InvoicePrintPoolLInParam();
		ReflectUtils.copyProperties(model, inparam);
		inparam.setAcctdAmountCR(model.getAcctdAmountCR());
		inparam.setVatAmount(model.getVatAmount());
		inparam.setInvoiceAmount(model.getInvoiceAmount());
		return inparam;
	}
	public InvoicePrintPoolL convertInvoicePrintPoolLInParamToEntity(InvoicePrintPoolLInParam inParam){
		InvoicePrintPoolL entity=new InvoicePrintPoolL();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

