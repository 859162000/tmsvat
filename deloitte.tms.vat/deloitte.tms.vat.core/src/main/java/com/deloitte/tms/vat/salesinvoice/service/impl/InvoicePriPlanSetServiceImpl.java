package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePriPlanSet;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePriPlanSetInParam;
import com.deloitte.tms.vat.salesinvoice.dao.InvoicePriPlanSetDao;
import com.deloitte.tms.vat.salesinvoice.service.InvoicePriPlanSetService;
/**
 * Home object for domain model class InvoicePriPlanSet.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(InvoicePriPlanSetService.BEAN_ID)
public class InvoicePriPlanSetServiceImpl extends BaseService implements InvoicePriPlanSetService{
	@Resource
	InvoicePriPlanSetDao invoicePriPlanSetDao;

	@Override
	public IDao getDao() {
		return invoicePriPlanSetDao;
	}

	@Override
	public DaoPage findInvoicePriPlanSetByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= invoicePriPlanSetDao.findInvoicePriPlanSetByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertInvoicePriPlanSetToInParam((List<InvoicePriPlanSet>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<InvoicePriPlanSetInParam> findInvoicePriPlanSetByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<InvoicePriPlanSet> temp= invoicePriPlanSetDao.findInvoicePriPlanSetByParams(params);
		return convertInvoicePriPlanSetToInParam(temp);
	}
	@Override
	public void saveInvoicePriPlanSetDataListsMap(Map dataListsMap) {
		Collection<InvoicePriPlanSetInParam> deleteList = BatchUtils.to(InvoicePriPlanSetInParam.class).getDeleteEntities(dataListsMap);
		Collection<InvoicePriPlanSetInParam> insertList =  BatchUtils.to(InvoicePriPlanSetInParam.class).getInsertEntities(dataListsMap);
		Collection<InvoicePriPlanSetInParam> updateList =  BatchUtils.to(InvoicePriPlanSetInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(InvoicePriPlanSetInParam inParam: updateList){
				InvoicePriPlanSet entity=convertInvoicePriPlanSetInParamToEntity(inParam);
				invoicePriPlanSetDao.update(entity);
			}		
//			invoicePriPlanSetDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(InvoicePriPlanSetInParam inParam: insertList){
				InvoicePriPlanSet entity=convertInvoicePriPlanSetInParamToEntity(inParam);
				invoicePriPlanSetDao.save(entity);
				inParam.setId(entity.getId());
			}
//			invoicePriPlanSetDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(InvoicePriPlanSetInParam inParam:deleteList){
				InvoicePriPlanSet entity=new InvoicePriPlanSet();
				entity.setId(inParam.getId());
				invoicePriPlanSetDao.remove(entity);
			}
//			invoicePriPlanSetDao.removeAll(deleteList);
		}
		
	}
	private List<InvoicePriPlanSetInParam> convertInvoicePriPlanSetToInParam(List<InvoicePriPlanSet> models){
		List<InvoicePriPlanSetInParam> result=new ArrayList<InvoicePriPlanSetInParam>();
		for(InvoicePriPlanSet initiation:models){
			InvoicePriPlanSetInParam inparam=convertInvoicePriPlanSetToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public InvoicePriPlanSetInParam convertInvoicePriPlanSetToInParam(InvoicePriPlanSet model){
		InvoicePriPlanSetInParam inparam=new InvoicePriPlanSetInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	public InvoicePriPlanSet convertInvoicePriPlanSetInParamToEntity(InvoicePriPlanSetInParam inParam){
		InvoicePriPlanSet entity=new InvoicePriPlanSet();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}
}

