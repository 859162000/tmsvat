package com.deloitte.tms.base.taxsetting.dao.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.dao.impl.BaseDao;
import com.deloitte.tms.base.taxsetting.dao.TmsMdTrxAffirmSettingDao;
import com.deloitte.tms.base.taxsetting.model.TmsMdTrxAffirmSetting;
/**
 * Home object for domain model class TmsMdTrxAffirmSetting.
 * @see com.deloitte.tms.base.masterdata.model
 * @author Hibernate Tools
 */
@Component(TmsMdTrxAffirmSettingDao.BEAN_ID)
public class TmsMdTrxAffirmSettingDaoImpl extends BaseDao<TmsMdTrxAffirmSetting> implements TmsMdTrxAffirmSettingDao{
	public DaoPage findTmsMdTrxAffirmSettingByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdTrxAffirmSettingQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<TmsMdTrxAffirmSetting> findTmsMdTrxAffirmSettingByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdTrxAffirmSettingQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildTmsMdTrxAffirmSettingQuery(StringBuffer query,Map values,Map params) {
		query.append(" from TmsMdTrxAffirmSetting where 1=1 ");
		Object value=params.get("status");
		Object enabledFlag= params.get("enabledFlag");
		Object orgId=params.get("orgId");
		Object taxTrxTypeId=params.get("taxTrxTypeId");
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);
		}
		if(enabledFlag != null && !"".equals(enabledFlag)){
			
			query.append(" and enabledFlag=:enabledFlag");
			values.put("enabledFlag", enabledFlag);
		}
	    if(orgId != null && !"".equals(orgId)){
			
			query.append(" and orgId=:orgId");
			values.put("orgId", orgId);
		}
	    if(taxTrxTypeId != null && !"".equals(taxTrxTypeId)){
			
	 			query.append(" and taxTrxTypeId=:taxTrxTypeId");
	 			values.put("taxTrxTypeId", taxTrxTypeId);
	 		}
		
	}
}

