package com.deloitte.tms.vat.salesinvoice.service.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.commons.utils.BatchUtils;
import com.deloitte.tms.pl.core.commons.utils.reflect.ReflectUtils;
import com.deloitte.tms.pl.core.dao.IDao;
import com.deloitte.tms.pl.core.service.impl.BaseService;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePrintPoolD;
import com.deloitte.tms.vat.salesinvoice.model.InvoicePrintPoolDInParam;
import com.deloitte.tms.vat.salesinvoice.dao.InvoicePrintPoolDDao;
import com.deloitte.tms.vat.salesinvoice.service.InvoicePrintPoolDService;
/**
 * Home object for domain model class InvoicePrintPoolD.
 * @see com.deloitte.tms.vat.salesinvoice.model
 * @author Hibernate Tools
 */
@Component(InvoicePrintPoolDService.BEAN_ID)
public class InvoicePrintPoolDServiceImpl extends BaseService implements InvoicePrintPoolDService{
	@Resource
	InvoicePrintPoolDDao invoicePrintPoolDDao;

	@Override
	public IDao getDao() {
		return invoicePrintPoolDDao;
	}

	@Override
	public DaoPage findInvoicePrintPoolDByParams(Map params, Integer pageIndex,
			Integer pageSize) {
		if(params==null)
		{
			params=new HashMap();
		}			
		DaoPage daoPage= invoicePrintPoolDDao.findInvoicePrintPoolDByParams(params, pageIndex, pageSize);
		daoPage.setResult(convertInvoicePrintPoolDToInParam((List<InvoicePrintPoolD>) daoPage.getResult()));
		return daoPage;
	}
	@Override
	public List<InvoicePrintPoolDInParam> findInvoicePrintPoolDByParams(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<InvoicePrintPoolD> temp= invoicePrintPoolDDao.findInvoicePrintPoolDByParams(params);
		return convertInvoicePrintPoolDToInParam(temp);
	}
	@Override
	public void saveInvoicePrintPoolDDataListsMap(Map dataListsMap) {
		Collection<InvoicePrintPoolDInParam> deleteList = BatchUtils.to(InvoicePrintPoolDInParam.class).getDeleteEntities(dataListsMap);
		Collection<InvoicePrintPoolDInParam> insertList =  BatchUtils.to(InvoicePrintPoolDInParam.class).getInsertEntities(dataListsMap);
		Collection<InvoicePrintPoolDInParam> updateList =  BatchUtils.to(InvoicePrintPoolDInParam.class).getModifiedEntities(dataListsMap);
		if (updateList != null&&updateList.size() > 0) {
			for(InvoicePrintPoolDInParam inParam: updateList){
				InvoicePrintPoolD entity=convertInvoicePrintPoolDInParamToEntity(inParam);
				invoicePrintPoolDDao.update(entity);
			}		
//			invoicePrintPoolDDao.updateAll(updateList);
		}
		if (insertList != null&&insertList.size() > 0) {
			for(InvoicePrintPoolDInParam inParam: insertList){
				InvoicePrintPoolD entity=convertInvoicePrintPoolDInParamToEntity(inParam);
				invoicePrintPoolDDao.save(entity);
				inParam.setId(entity.getId());
			}
//			invoicePrintPoolDDao.saveAll(insertList);
		}
		if (deleteList != null&&deleteList.size() > 0) {
			for(InvoicePrintPoolDInParam inParam:deleteList){
				InvoicePrintPoolD entity=new InvoicePrintPoolD();
				entity.setId(inParam.getId());
				invoicePrintPoolDDao.remove(entity);
			}
//			invoicePrintPoolDDao.removeAll(deleteList);
		}
		
	}
	private List<InvoicePrintPoolDInParam> convertInvoicePrintPoolDToInParam(List<InvoicePrintPoolD> models){
		List<InvoicePrintPoolDInParam> result=new ArrayList<InvoicePrintPoolDInParam>();
		for(InvoicePrintPoolD initiation:models){
			InvoicePrintPoolDInParam inparam=convertInvoicePrintPoolDToInParam(initiation);
			result.add(inparam);
		}
		return result;
	}
	public InvoicePrintPoolDInParam convertInvoicePrintPoolDToInParam(InvoicePrintPoolD model){
		InvoicePrintPoolDInParam inparam=new InvoicePrintPoolDInParam();
		ReflectUtils.copyProperties(model, inparam);
		return inparam;
	}
	
	public InvoicePrintPoolD convertInvoicePrintPoolDInParamToEntity(InvoicePrintPoolDInParam inParam){
		InvoicePrintPoolD entity=new InvoicePrintPoolD();
		ReflectUtils.copyProperties(inParam, entity);
		return entity;
	}

	@Override
	public List<InvoicePrintPoolD> findInvoicePrintPoolDByPoolLId(Map params) {
		if(params==null)
		{
			params=new HashMap();
		}
		List<InvoicePrintPoolD> result= invoicePrintPoolDDao.findInvoicePrintPoolDByParams(params);
		return result;
	}
}

