package com.deloitte.tms.base.masterdata.dao.impl;
// Generated by bo.wang with ling2.autoproject

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import com.deloitte.tms.pl.core.commons.support.DaoPage;
import com.deloitte.tms.pl.core.commons.utils.AssertHelper;
import com.deloitte.tms.pl.core.dao.impl.BaseDao;
import com.deloitte.tms.base.masterdata.model.TmsMdTaxTrxType;
import com.deloitte.tms.base.masterdata.dao.TmsMdTaxTrxTypeDao;
/**
 * Home object for domain model class TmsMdTaxTrxType.
 * @see com.deloitte.tms.base.masterdata.model
 * @author Hibernate Tools
 */
@Component(TmsMdTaxTrxTypeDao.BEAN_ID)
public class TmsMdTaxTrxTypeDaoImpl extends BaseDao<TmsMdTaxTrxType> implements TmsMdTaxTrxTypeDao{
	public DaoPage findTmsMdTaxTrxTypeByParams(Map params, Integer pageIndex,Integer pageSize)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdTaxTrxTypeQuery(query, values, params);
		return pageBy(query, values, pageIndex, pageSize);
	}
	public List<TmsMdTaxTrxType> findTmsMdTaxTrxTypeByParams(Map params)
	{
		StringBuffer query=new StringBuffer();
		Map values=new HashMap();
		buildTmsMdTaxTrxTypeQuery(query, values, params);
		return findBy(query, values);
	}
	private void buildTmsMdTaxTrxTypeQuery(StringBuffer query,Map values,Map params) {
		query.append(" from TmsMdTaxTrxType where flag='1' ");
		Object value=params.get("status");
		if(value!=null)
		{
			query.append(" and status=:status");
			values.put("status", value);
		}
		value=params.get("id");
		if(value!=null)
		{
			query.append(" and id=:id");
			values.put("id", value);
		}
	}
	@Override
	public int removeTmsMdTaxTrxTypes(String tmsMdTaxTrxTypeId) {
		this.removeById(TmsMdTaxTrxType.class,tmsMdTaxTrxTypeId);
		return 0;
	}
	@Override
	public DaoPage retrievalTmsMdTaxTrxType(Map<String, Object> parameter,
			Integer pageIndex, Integer pageSize) {
		StringBuffer query = new StringBuffer();
		Map values = new HashMap();
		query.append(" from TmsMdTaxTrxType where 1=1");
			query.append(" and taxTrxTypeCode = :taxTrxTypeCode");
			values.put("taxTrxTypeCode",parameter.get("taxTransactionType"));
			DaoPage daopage = pageBy(query, values, pageIndex, pageSize);
			return daopage;
	}
}

